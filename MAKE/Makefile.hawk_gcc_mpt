CMP = mpicxx
LNK = mpicxx

# module load gcc mpt papi boost
# Currently Loaded Modules:
#  1) system/site_names   2) system/ws/1.3.1   3) system/wrappers/1.0   4) gcc/9.2.0   5) mpt/2.23   6) papi/c048e224f   7) boost/1.70.0
#
#  in jobscript, use:
# export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/zhome/academic/HLRS/pri/ipryakem/libraries/mpt/2.23/gcc/9.2.0/phiprof/lib
# export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/zhome/academic/HLRS/pri/ipryakem/libraries/mpt/2.23/gcc/9.2.0/jemalloc/lib
# export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/zhome/academic/HLRS/pri/ipryakem/libraries/mpt/2.23/gcc/9.2.0/zoltan/lib
# export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/zhome/academic/HLRS/pri/ipryakem/libraries/mpt/2.23/gcc/9.2.0/vlsv/lib


#======== Vectorization ==========
#Set vector backend type for vlasov solvers, sets precision and length. 
#Options: 
# AVX:      VEC4D_AGNER, VEC4F_AGNER, VEC8F_AGNER
# AVX512:   VEC8D_AGNER, VEC16F_AGNER
# Fallback: VEC4D_FALLBACK, VEC4F_FALLBACK, VEC8F_FALLBACK, VEC8D_FALLBACK

ifeq ($(DISTRIBUTION_FP_PRECISION),SPF)
#Single-precision        
	VECTORCLASS = VEC8F_AGNER
	INC_VECTORCLASS = -I$(LIBRARY_PREFIX)/vectorclass-version1
#	VECTORCLASS = VEC8F_FALLBACK
#	INC_VECTORCLASS = -I$(HOME)/vlasiator/vlasovsolver
else
#Double-precision
	VECTORCLASS = VEC4D_AGNER
	INC_VECTORCLASS = -I$(LIBRARY_PREFIX)/vectorclass-version1
#	VECTORCLASS = VEC4D_FALLBACK
#	VECTORCLASS = VEC8D_FALLBACK
#	INC_VECTORCLASS = -I$(HOME)/vlasiator/vlasovsolver
endif

FLAGS = 

# NOTES on compiler flags:
# CXXFLAGS is for compiler flags, they are always used
# MATHFLAGS are for special math etc. flags, these are only applied on solver functions
# LDFLAGS flags for linker

#GNU flags:
CC_BRAND = gcc
CC_BRAND_VERSION = 9.2.0
CXXFLAGS += -g -O3 -fopenmp -funroll-loops -std=c++17 -W -Wall -Wno-unused -fabi-version=0 -Wall -Wpedantic -mfma -march=native -mavx2
#CXXFLAGS += -O3 -fopenmp -funroll-loops -std=c++17 -W -Wall -Wno-unused -fabi-version=0 -mavx
not_parallel_tools: CXXFLAGS += -march=native -mno-avx2 -mavx 
testpackage: CXXFLAGS = -g -O2 -fopenmp -funroll-loops -std=c++17 -fabi-version=0 
not_parallel_tools: CC_BRAND_VERSION = 4.9.2-noavx2

MATHFLAGS = -ffast-math
LDFLAGS =
LIB_MPI = -lgomp

BOOST_VERSION = 
MPI_BRAND = mpt
MPI_VERSION = 2.23
ZOLTAN_VERSION = 
SILO_VERSION = 
JEMALLOC_VERSION = 5.2.1
LIBRARY_PREFIX = /zhome/academic/HLRS/pri/ipryakem/libraries


#======== PAPI ==========
#Add PAPI_MEM define to use papi to report memory consumption?
CXXFLAGS +=  -DPAPI_MEM
testpackage: CXXFLAGS +=  -DPAPI_MEM

#======== Allocator =========
#Use jemalloc instead of system malloc to reduce memory fragmentation? https://github.com/jemalloc/jemalloc
#Configure jemalloc with  --with-jemalloc-prefix=je_ when installing it
CXXFLAGS += -DUSE_JEMALLOC -DJEMALLOC_NO_DEMANGLE
testpackage: CXXFLAGS += -DUSE_JEMALLOC -DJEMALLOC_NO_DEMANGLE


#compiled libraries

LIB_BOOST= -L$(LIBRARY_PREFIX)/$(MPI_BRAND)/$(MPI_VERSION)/$(CC_BRAND)/$(CC_BRAND_VERSION)/boost/lib -lboost_program_options
INC_BOOST=-L$(LIBRARY_PREFIX)/$(MPI_BRAND)/$(MPI_VERSION)/$(CC_BRAND)/$(CC_BRAND_VERSION)/boost/include

INC_ZOLTAN = -I$(LIBRARY_PREFIX)/$(MPI_BRAND)/$(MPI_VERSION)/$(CC_BRAND)/$(CC_BRAND_VERSION)/zoltan/include
LIB_ZOLTAN = -L$(LIBRARY_PREFIX)/$(MPI_BRAND)/$(MPI_VERSION)/$(CC_BRAND)/$(CC_BRAND_VERSION)/zoltan/lib -lzoltan

INC_JEMALLOC = -I$(LIBRARY_PREFIX)/$(MPI_BRAND)/$(MPI_VERSION)/$(CC_BRAND)/$(CC_BRAND_VERSION)/jemalloc/include
LIB_JEMALLOC = -L$(LIBRARY_PREFIX)/$(MPI_BRAND)/$(MPI_VERSION)/$(CC_BRAND)/$(CC_BRAND_VERSION)/jemalloc/lib -ljemalloc

INC_VLSV = -I$(LIBRARY_PREFIX)/$(MPI_BRAND)/$(MPI_VERSION)/$(CC_BRAND)/$(CC_BRAND_VERSION)/vlsv
LIB_VLSV = -L$(LIBRARY_PREFIX)/$(MPI_BRAND)/$(MPI_VERSION)/$(CC_BRAND)/$(CC_BRAND_VERSION)/vlsv -lvlsv

LIB_PROFILE = -L$(LIBRARY_PREFIX)/$(MPI_BRAND)/$(MPI_VERSION)/$(CC_BRAND)/$(CC_BRAND_VERSION)/phiprof/lib -lphiprof
INC_PROFILE = -I$(LIBRARY_PREFIX)/$(MPI_BRAND)/$(MPI_VERSION)/$(CC_BRAND)/$(CC_BRAND_VERSION)/phiprof/include

INC_PAPI = -I/opt/hlrs/spack/rev-004_2020-06-17/papi/c048e224f-gcc-9.2.0-hxfnx7kt/include
LIB_PAPI = -L/opt/hlrs/spack/rev-004_2020-06-17/papi/c048e224f-gcc-9.2.0-hxfnx7kt/lib -lpapi

#header libraries

INC_EIGEN = -I$(LIBRARY_PREFIX)/
INC_DCCRG = -I$(LIBRARY_PREFIX)/dccrg/
INC_FSGRID = -I$(LIBRARY_PREFIX)/fsgrid/
INC_VECTORCLASS = -I$(LIBRARY_PREFIX)/vectorclass-version1

