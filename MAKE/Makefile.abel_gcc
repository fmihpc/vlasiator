CMP = mpic++ 
LNK = mpic++ 

#-DNO_WRITE_AT_ALL:  Define to disable write at all to 
#                    avoid memleak (much slower IO)
#-DMPICH_IGNORE_CXX_SEEK: Ignores some multiple definition 
#                         errors that come up when using 
#                         mpi.h in c++ on Cray

#CXXFLAGS = -DMPICH_IGNORE_CXX_SEEK

FLAGS = 

# NOTES on compiler flags:
# CXXFLAGS is for compiler flags, they are always used
# MATHFLAGS are for special math etc. flags, these are only applied on solver functions
# LDFLAGS flags for linker

#GNU flags:
CC_BRAND = gcc
CC_VERSION = 4.7.2
CXXFLAGS += -O4 -fopenmp -funroll-loops -std=c++0x -W -Wall -pedantic -Wno-unused -DEIGEN_NO_DEBUG -fabi-version=6
# CXXFLAGS += -g -O0 -funroll-loops -fopenmp -std=c++0x -fabi-version=6 -mfma4
MATHFLAGS =  -ffast-math
LDFLAGS =
LIB_MPI = -lgomp

#BOOST_VERSION = 1.53.0
MPI_BRAND = openmpi
MPI_VERSION = 1.7.3
#ZOLTAN_VERSION = 3.6
#SILO_VERSION = 4.8

LIBRARY_PREFIX_A = /usit/abel/u1/pr2f2813/libraries
LIBRARY_PREFIX_B = /cluster/software/VERSIONS



INC_BOOST = -I$(LIBRARY_PREFIX_B)/boost-1.53.0/include
LIB_BOOST = -L$(LIBRARY_PREFIX_B)/boost-1.53.0/lib -lboost_program_options

INC_ZOLTAN = -I$(LIBRARY_PREFIX_A)/$(MPI_BRAND)/$(MPI_VERSION)/$(CC_BRAND)/$(CC_VERSION)/zoltan/include
LIB_ZOLTAN = -L$(LIBRARY_PREFIX_A)/$(MPI_BRAND)/$(MPI_VERSION)/$(CC_BRAND)/$(CC_VERSION)/zoltan/lib -lzoltan

#INC_SILO = -I$(LIBRARY_PREFIX_A)/cray-mpich2/$(MPT_VERSION)/$(CC_BRAND)/$(CC_BRAND_VERSION)/silo/$(SILO_VERSION)/include
#LIB_SILO = -L$(LIBRARY_PREFIX_A)/cray-mpich2/$(MPT_VERSION)/$(CC_BRAND)/$(CC_BRAND_VERSION)/silo/$(SILO_VERSION)/lib -lsilo


#Official dccrg installation
INC_DCCRG = -I$(LIBRARY_PREFIX_A)/dccrg

INC_EIGEN = -I$(LIBRARY_PREFIX_A)/eigen-eigen-ffa86ffb5570

LIB_PROFILE = -L$(LIBRARY_PREFIX_A)/$(MPI_BRAND)/$(MPI_VERSION)/$(CC_BRAND)/$(CC_VERSION)/phiprof/lib -lphiprof
INC_PROFILE = -I$(LIBRARY_PREFIX_A)/phiprof/include

INC_VECTORCLASS = -I$(LIBRARY_PREFIX_A)/vectorclass

INC_VLSV = -I$(LIBRARY_PREFIX_A)/vlsv
LIB_VLSV = -L$(LIBRARY_PREFIX_A)/vlsv -lvlsv


