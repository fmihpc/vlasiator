# Sample cfg file for an interplanetary shock simulation
#
# The user has to determine shock conditions themselves,
# e.g. by using a Rankine-Hugoniot condition solver such as
# htts://github.com/fmihpc/analysator/scripts/obliqueshock.py
#
# The upstream to downstream transition is done using a
# smootherstep() profile.
#
# Note that the code assumes all relevant components to be
# in the X and Z components, Y components will be discarded.
#
# This example configuration uses a 2D box and low velocity
# resolution to run tens of seconds in a matter of minutes
# on 4 nodes on LUMI-C.

project = IPShock
dynamic_timestep = 1
propagate_field = 1
propagate_vlasov_acceleration = 1
propagate_vlasov_translation = 1

hallMinimumRho = 1e3

ParticlePopulations = proton

[proton_properties]
mass = 1
mass_units = PROTON
charge = 1

[io]
diagnostic_write_interval = 10
#restart_write_t_interval = 15
write_initial_state = 0
restart_walltime_interval = 85000 #1500
number_of_restarts = 1
write_restart_stripe_factor = 5

system_write_t_interval = 5
system_write_file_name = bulk
system_write_distribution_stride = 0
system_write_distribution_xline_stride = 10
system_write_distribution_yline_stride = 1
system_write_distribution_zline_stride = 10

# The grid can easily be reduced to 1D along X
# or expanded to 3D along Y. 
[gridbuilder]
x_length = 750
y_length = 1
z_length = 50
x_min = -150e6
x_max =  150e6
y_min = -2e5
y_max =  2e5
z_min = -1e7
z_max =  1e7
t_max = 500

[proton_vspace]
vx_min = -8.04e6
vx_max = +8.04e6
vy_min = -8.04e6
vy_max = +8.04e6
vz_min = -8.04e6
vz_max = +8.04e6
vx_length = 67
vy_length = 67
vz_length = 67

[boundaries]
periodic_x = no
periodic_y = yes
periodic_z = yes
boundary = Outflow
boundary = Maxwellian

[bailout]
min_dt = 1.e-7

[variables]
output = populations_vg_rho
output = populations_vg_ptensor
output = populations_vg_v
output = fg_e
output = vg_e_gradpe
output = fg_b
output = vg_b_vol
output = vg_boundarytype
output = vg_rank
output = populations_vg_blocks
output = vg_f_saved
output = populations_vg_moments_nonthermal
output = populations_vg_moments_thermal
diagnostic = populations_vg_blocks

[loadBalance]
rebalanceInterval = 25

[fieldsolver]
ohmHallTerm = 2
minCFL = 0.4
maxCFL = 0.45
maxSubcycles = 50

# This set of options parameterises and activates the
# electron pressure gradient term of the electric field.
# At resolutions like htis example or finer it does start
# to be non-negligible relatively to the main E components.
electronTemperature = 0.5e6 # inflow
electronDensity = 1.0e6 #inflow
electronPTindex = 1.666667 # adiabatic
ohmGradPeTerm = 1 # active


[vlasovsolver]
minCFL = 0.8
maxCFL = 0.99
maxSlAccelerationRotation = 22
maxSlAccelerationSubcycles = 2

[proton_sparse]
minValue = 1.e-16
dynamicAlgorithm = 0

[outflow]
precedence = 3

# Note the use of None, preserving the initial state instead of
# using a copy/Neumann condition.
[proton_outflow]
face = x-
vlasovScheme_face_x- = None

[maxwellian]
face = x+
precedence = 2

[proton_maxwellian]
dynamic = 0
file_x+ = upstream.dat

[IPShock]
BX0u = 7.47e-9
BY0u = 0.0
BZ0u = 4.31e-9
BX0d = 7.47e-09
BY0d = 0.0
BZ0d = 1.64749743e-08
Width = 1.0e6

[proton_IPShock]
VX0u = -750000.
VY0u = 0
VZ0u = -432730.92369478
rhou = 1.0e+06
Temperatureu = 500000.
VX0d = -222384.89635475
VY0d = 0
VZ0d = 490466.59202853
rhod = 3372531.1938612536
Temperatured = 11621882.668058667

maxwCutoff = 1.0e-16

# Parameterisation for the thermal vs. nonthermal data reducers.
# Set the origin and radius of a sphere in velocity-space coordinates (m/s)
# encompassing the upstream solar wind core. During the computation of
# moments, phase-space cells inside the radius centred on the (vx,vy,vz)
# below will be assumed "thermal" and cells outside the radius, "nonthermal".
# Note that this only yields sensible results upstream in the foreshock!
[proton_thermal]
vx = -750000.
vy = 0
vz = -432730.92369478
radius = 650000.
